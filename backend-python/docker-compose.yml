version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: axs360_postgres
    environment:
      POSTGRES_DB: axs360_db
      POSTGRES_USER: axs_user
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U axs_user -d axs360_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: axs360_redis
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # AXS360 Backend API
  backend:
    build: .
    container_name: axs360_backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://axs_user:secure_password@postgres:5432/axs360_db
      REDIS_URL: redis://:redis_password@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-jwt-key-256-bits-long}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      DEBUG: "False"
      ENVIRONMENT: production
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: axs360_nginx
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./uploads:/var/www/uploads
    restart: unless-stopped

  # Celery Worker (for background tasks)
  celery:
    build: .
    container_name: axs360_celery
    command: celery -A app.core.celery worker --loglevel=info
    depends_on:
      - redis
      - postgres
    environment:
      DATABASE_URL: postgresql://axs_user:secure_password@postgres:5432/axs360_db
      REDIS_URL: redis://:redis_password@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-jwt-key-256-bits-long}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped

  # Celery Beat (for scheduled tasks)
  celery-beat:
    build: .
    container_name: axs360_celery_beat
    command: celery -A app.core.celery beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - redis
      - postgres
    environment:
      DATABASE_URL: postgresql://axs_user:secure_password@postgres:5432/axs360_db
      REDIS_URL: redis://:redis_password@redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-jwt-key-256-bits-long}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: axs360_network
